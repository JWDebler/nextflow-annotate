#!/usr/bin/env ruby
$strain_id = ARGV.shift

def gene(id_count)
  sprintf("%s_G%05d", $strain_id, id_count)
end

def mrna(id_count)
  sprintf("%s_R%05d", $strain_id, id_count)
end

def cds(id_count)
  sprintf("%s_C%05d", $strain_id, id_count)
end

def start_codon(id_count)
  sprintf("%s_START_%05d", $strain_id, id_count)
end

def stop_codon(id_count)
  sprintf("%s_STOP_%05d", $strain_id, id_count)
end

reached_fasta = false

ARGF.each do |line|
  if line =~ /##FASTA/
    reached_fasta = true
  end
  if line !~ /^\S+\t\S+\t\S+_codon/ || reached_fasta
    next
  end

  split = line.chomp.split("\t")
  attributes = Hash[split[8].split(";").map{|pair| pair.split(" ")}]
  id_count = attributes["gene_id"].match(/^"(\d+)_/)[1]
  attributes.delete("gene_id")
  attributes.delete("transcript_id")
  attributes.delete("gene_name")
  attributes.delete("transcript_name")

  case split[2].downcase
  when "start_codon"
    attributes["ID"] = start_codon(id_count)
    attributes["Parent"] = gene(id_count)
  when "stop_codon"
    attributes["ID"] = stop_codon(id_count)
    attributes["Parent"] = gene(id_count)
  end

  split[8] = attributes.map{|attribute| attribute.join("=")}.join(";")
  puts split.join("\t")
end
